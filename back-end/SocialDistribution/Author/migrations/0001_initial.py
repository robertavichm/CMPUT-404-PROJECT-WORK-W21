# Generated by Django 3.1.7 on 2021-03-04 06:50

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('displayName', models.TextField()),
                ('host', models.TextField()),
                ('url', models.TextField()),
                ('type', models.TextField()),
                ('github', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contentType', models.TextField()),
                ('published', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('comment', models.TextField()),
                ('type', models.TextField(default='comment')),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Author.author')),
            ],
        ),
        migrations.CreateModel(
            name='FriendShip',
            fields=[
                ('FriendShipId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('accepted', models.BooleanField(default=False)),
                ('author_friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend', to='Author.author')),
                ('author_primary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary', to='Author.author')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('like_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.TextField()),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likee', to='Author.author')),
                ('comment_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Author.comment')),
                ('liker_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liker', to='Author.author')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('type', models.TextField(default='post')),
                ('description', models.TextField()),
                ('source', models.TextField()),
                ('origin', models.TextField()),
                ('contentType', models.TextField(choices=[('text/plain', 'Choice1'), ('text/markdown', 'Choice2'), ('application/base64', 'Choice3'), ('image/png;base64', 'Choice4'), ('image/jpeg;base64', 'Choice5')])),
                ('content', models.TextField()),
                ('categories', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), default=list, size=None)),
                ('commentLink', models.TextField()),
                ('commentCount', models.IntegerField(default=0)),
                ('pageSize', models.IntegerField()),
                ('published', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('visibility', models.TextField()),
                ('unlisted', models.BooleanField()),
                ('author_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Author.author')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Author.author')),
                ('comment_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Author.comment')),
                ('like_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Author.like')),
                ('post_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Author.post')),
                ('request_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Author.friendship')),
            ],
        ),
        migrations.AddField(
            model_name='like',
            name='post_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Author.post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Author.post'),
        ),
    ]
